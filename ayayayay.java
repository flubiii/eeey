//В начале программы мы создаем объект класса Scanner, чтобы прочитать ввод пользователя.
import java.util.Scanner;

public class ayayayay {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //Затем мы запрашиваем у пользователя количество элементов в массиве.
        System.out.print("Введите количество элементов в массиве: ");
        //Cохраняем введенное значение в переменную n.
        int n = scanner.nextInt();

        //Создаем массив array размером n.
        int[] array = new int[n];

        //Запрашиваем у пользователя элементы массива.
        System.out.println("Введите элементы массива:");
        //Cохраняем введенные элементы в массив array с помощью цикла for.
        for (int i = 0; i < n; i++) {
            array[i] = scanner.nextInt();
        }

        //Запрашиваем у пользователя элемент, который нужно найти.
        System.out.print("Введите значение, которое нужно найти: ");
        int target = scanner.nextInt();

        //Выводим на экран исходный массив, вызывая метод printArray.
        printArray(array);

        //Вызываем метод binarySearch, передавая в него массив array и значение, которое мы хотим найти.
        int result = binarySearch(array, target);

        //Выводим на экран результат поиска, вызывая метод printResult.
        printResult(result);
    }

    //Метод получает на вход массив array и значение, которое нужно найти.
    public static int binarySearch(int[] array, int target) {
        //Он определяет начальную позицию start и конечную позицию end для поиска в массиве. Начальная позиция устанавливается в 0, а конечная - в n-1, где n - размер массива.
        int start = 0;
        int end = array.length - 1;

        //Внутри цикла while проверяется условие, что начальная позиция меньше или равна конечной позиции. Если это условие выполняется, то продолжаем поиск.
        while (start <= end) {
            //Внутри цикла вычисляется средняя позиция mid между начальной и конечной позициями.
            int mid = (start + end) / 2;

            //Сравниваем значение в средней позиции с искомым значением. Если они равны, то мы нашли искомый элемент и возвращаем его позицию.
            if (array[mid] == target) {
                return mid;
                //Если значение в средней позиции меньше искомого значения, то мы сужаем диапазон поиска, устанавливая начальную позицию start на позицию mid + 1.
            } else if (array[mid] < target) {
                start = mid + 1;
                //Если значение в средней позиции больше искомого значения, то мы сужаем диапазон поиска, устанавливая конечную позицию end на позицию mid - 1.
            } else {
                end = mid - 1;
            }
        }

        //Если цикл завершается искомый элемент не найден, возвращаем -1.
        return -1;
    }

    //Dыводит элементы массива на экран, разделяя их пробелами.
    public static void printArray(int[] array) {
        System.out.print("Исходный массив: ");
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }
        System.out.println();
    }

    //выводит результат поиска на экран.
    public static void printResult(int result) {
        //Если результат равен -1, то выводится сообщение о том, что элемент не найден.
        if (result == -1) {
            System.out.println("Элемент не найден");
        //Если результат не равен -1, то выводится сообщение о том, что элемент найден и его позиция/
        } else {
            System.out.println("Элемент найден на позиции " + result);
        }
    }
}
